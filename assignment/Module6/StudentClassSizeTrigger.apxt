trigger StudentClassSizeTrigger on Student__c (before insert) {
    List<Student__c> listStudents = Trigger.New;
    
    Map<Id, List<Student__C>> mapClsStudent = new Map<Id, List<Student__C>>();
    Set<Id> classIds = new Set<Id>();
    
    for(Student__c st : listStudents){
        classIds.add(st.class__c);
        if(mapClsStudent.containsKey(st.class__c)){
            mapClsStudent.get(st.class__c).add(st);            
        } else {
            List<Student__c> stList = new List<Student__c>();
            stList.add(st);
            mapClsStudent.put(st.class__c, stList);
        }
    }
    
    Map<Id, Class__c> mapClazz = new Map<Id, Class__c>([select Id, MaxSize__c from Class__c where Id in :classIds]);
    List<AggregateResult> listCount = new List<AggregateResult>(
        [select count(Id) recordCount, 
         class__c classId from student__c 
         where class__c in :classIds group by class__c]);
    
    for(AggregateResult rs : listCount){
        Id id = (Id)rs.get('classId');
        if(mapClazz.containsKey(id) 
           && ((Integer)rs.get('recordCount')) >= mapClazz.get(id).MaxSize__c 
           && mapClsStudent.containsKey(id)){
            List<Student__c> stList = mapClsStudent.get(id);
            for(Student__c st : stList){
               st.addError('Class Reached MaxLimit.');                   
            }
        }
    }
}